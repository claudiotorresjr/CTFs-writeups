
writing_on_the_wall:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 32 2f 00 00    	push   0x2f32(%rip)        # 3f58 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 33 2f 00 00 	bnd jmp *0x2f33(%rip)        # 3f60 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64
    1094:	68 06 00 00 00       	push   $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <_init+0x20>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64
    10a4:	68 07 00 00 00       	push   $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64
    10b4:	68 08 00 00 00       	push   $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64
    10c4:	68 09 00 00 00       	push   $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64
    10d4:	68 0a 00 00 00       	push   $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64
    10e4:	68 0b 00 00 00       	push   $0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10ef:	90                   	nop
    10f0:	f3 0f 1e fa          	endbr64
    10f4:	68 0c 00 00 00       	push   $0xc
    10f9:	f2 e9 21 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10ff:	90                   	nop
    1100:	f3 0f 1e fa          	endbr64
    1104:	68 0d 00 00 00       	push   $0xd
    1109:	f2 e9 11 ff ff ff    	bnd jmp 1020 <_init+0x20>
    110f:	90                   	nop

Disassembly of section .plt.got:

0000000000001110 <__cxa_finalize@plt>:
    1110:	f3 0f 1e fa          	endbr64
    1114:	f2 ff 25 dd 2e 00 00 	bnd jmp *0x2edd(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001120 <__stack_chk_fail@plt>:
    1120:	f3 0f 1e fa          	endbr64
    1124:	f2 ff 25 3d 2e 00 00 	bnd jmp *0x2e3d(%rip)        # 3f68 <__stack_chk_fail@GLIBC_2.4>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <printf@plt>:
    1130:	f3 0f 1e fa          	endbr64
    1134:	f2 ff 25 35 2e 00 00 	bnd jmp *0x2e35(%rip)        # 3f70 <printf@GLIBC_2.2.5>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001140 <alarm@plt>:
    1140:	f3 0f 1e fa          	endbr64
    1144:	f2 ff 25 2d 2e 00 00 	bnd jmp *0x2e2d(%rip)        # 3f78 <alarm@GLIBC_2.2.5>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <close@plt>:
    1150:	f3 0f 1e fa          	endbr64
    1154:	f2 ff 25 25 2e 00 00 	bnd jmp *0x2e25(%rip)        # 3f80 <close@GLIBC_2.2.5>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001160 <fputc@plt>:
    1160:	f3 0f 1e fa          	endbr64
    1164:	f2 ff 25 1d 2e 00 00 	bnd jmp *0x2e1d(%rip)        # 3f88 <fputc@GLIBC_2.2.5>
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <read@plt>:
    1170:	f3 0f 1e fa          	endbr64
    1174:	f2 ff 25 15 2e 00 00 	bnd jmp *0x2e15(%rip)        # 3f90 <read@GLIBC_2.2.5>
    117b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001180 <srand@plt>:
    1180:	f3 0f 1e fa          	endbr64
    1184:	f2 ff 25 0d 2e 00 00 	bnd jmp *0x2e0d(%rip)        # 3f98 <srand@GLIBC_2.2.5>
    118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001190 <strcmp@plt>:
    1190:	f3 0f 1e fa          	endbr64
    1194:	f2 ff 25 05 2e 00 00 	bnd jmp *0x2e05(%rip)        # 3fa0 <strcmp@GLIBC_2.2.5>
    119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011a0 <time@plt>:
    11a0:	f3 0f 1e fa          	endbr64
    11a4:	f2 ff 25 fd 2d 00 00 	bnd jmp *0x2dfd(%rip)        # 3fa8 <time@GLIBC_2.2.5>
    11ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011b0 <setvbuf@plt>:
    11b0:	f3 0f 1e fa          	endbr64
    11b4:	f2 ff 25 f5 2d 00 00 	bnd jmp *0x2df5(%rip)        # 3fb0 <setvbuf@GLIBC_2.2.5>
    11bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011c0 <open@plt>:
    11c0:	f3 0f 1e fa          	endbr64
    11c4:	f2 ff 25 ed 2d 00 00 	bnd jmp *0x2ded(%rip)        # 3fb8 <open@GLIBC_2.2.5>
    11cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011d0 <perror@plt>:
    11d0:	f3 0f 1e fa          	endbr64
    11d4:	f2 ff 25 e5 2d 00 00 	bnd jmp *0x2de5(%rip)        # 3fc0 <perror@GLIBC_2.2.5>
    11db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011e0 <exit@plt>:
    11e0:	f3 0f 1e fa          	endbr64
    11e4:	f2 ff 25 dd 2d 00 00 	bnd jmp *0x2ddd(%rip)        # 3fc8 <exit@GLIBC_2.2.5>
    11eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011f0 <rand@plt>:
    11f0:	f3 0f 1e fa          	endbr64
    11f4:	f2 ff 25 d5 2d 00 00 	bnd jmp *0x2dd5(%rip)        # 3fd0 <rand@GLIBC_2.2.5>
    11fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001200 <_start>:
    1200:	f3 0f 1e fa          	endbr64
    1204:	31 ed                	xor    %ebp,%ebp
    1206:	49 89 d1             	mov    %rdx,%r9
    1209:	5e                   	pop    %rsi
    120a:	48 89 e2             	mov    %rsp,%rdx
    120d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1211:	50                   	push   %rax
    1212:	54                   	push   %rsp
    1213:	45 31 c0             	xor    %r8d,%r8d
    1216:	31 c9                	xor    %ecx,%ecx
    1218:	48 8d 3d 40 03 00 00 	lea    0x340(%rip),%rdi        # 155f <main>
    121f:	ff 15 b3 2d 00 00    	call   *0x2db3(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1225:	f4                   	hlt
    1226:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    122d:	00 00 00 

0000000000001230 <deregister_tm_clones>:
    1230:	48 8d 3d d9 2d 00 00 	lea    0x2dd9(%rip),%rdi        # 4010 <stdout@GLIBC_2.2.5>
    1237:	48 8d 05 d2 2d 00 00 	lea    0x2dd2(%rip),%rax        # 4010 <stdout@GLIBC_2.2.5>
    123e:	48 39 f8             	cmp    %rdi,%rax
    1241:	74 15                	je     1258 <deregister_tm_clones+0x28>
    1243:	48 8b 05 96 2d 00 00 	mov    0x2d96(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    124a:	48 85 c0             	test   %rax,%rax
    124d:	74 09                	je     1258 <deregister_tm_clones+0x28>
    124f:	ff e0                	jmp    *%rax
    1251:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1258:	c3                   	ret
    1259:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001260 <register_tm_clones>:
    1260:	48 8d 3d a9 2d 00 00 	lea    0x2da9(%rip),%rdi        # 4010 <stdout@GLIBC_2.2.5>
    1267:	48 8d 35 a2 2d 00 00 	lea    0x2da2(%rip),%rsi        # 4010 <stdout@GLIBC_2.2.5>
    126e:	48 29 fe             	sub    %rdi,%rsi
    1271:	48 89 f0             	mov    %rsi,%rax
    1274:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1278:	48 c1 f8 03          	sar    $0x3,%rax
    127c:	48 01 c6             	add    %rax,%rsi
    127f:	48 d1 fe             	sar    %rsi
    1282:	74 14                	je     1298 <register_tm_clones+0x38>
    1284:	48 8b 05 65 2d 00 00 	mov    0x2d65(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    128b:	48 85 c0             	test   %rax,%rax
    128e:	74 08                	je     1298 <register_tm_clones+0x38>
    1290:	ff e0                	jmp    *%rax
    1292:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1298:	c3                   	ret
    1299:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000012a0 <__do_global_dtors_aux>:
    12a0:	f3 0f 1e fa          	endbr64
    12a4:	80 3d 7d 2d 00 00 00 	cmpb   $0x0,0x2d7d(%rip)        # 4028 <completed.0>
    12ab:	75 2b                	jne    12d8 <__do_global_dtors_aux+0x38>
    12ad:	55                   	push   %rbp
    12ae:	48 83 3d 42 2d 00 00 	cmpq   $0x0,0x2d42(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    12b5:	00 
    12b6:	48 89 e5             	mov    %rsp,%rbp
    12b9:	74 0c                	je     12c7 <__do_global_dtors_aux+0x27>
    12bb:	48 8b 3d 46 2d 00 00 	mov    0x2d46(%rip),%rdi        # 4008 <__dso_handle>
    12c2:	e8 49 fe ff ff       	call   1110 <__cxa_finalize@plt>
    12c7:	e8 64 ff ff ff       	call   1230 <deregister_tm_clones>
    12cc:	c6 05 55 2d 00 00 01 	movb   $0x1,0x2d55(%rip)        # 4028 <completed.0>
    12d3:	5d                   	pop    %rbp
    12d4:	c3                   	ret
    12d5:	0f 1f 00             	nopl   (%rax)
    12d8:	c3                   	ret
    12d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000012e0 <frame_dummy>:
    12e0:	f3 0f 1e fa          	endbr64
    12e4:	e9 77 ff ff ff       	jmp    1260 <register_tm_clones>

00000000000012e9 <error>:
    12e9:	f3 0f 1e fa          	endbr64
    12ed:	55                   	push   %rbp
    12ee:	48 89 e5             	mov    %rsp,%rbp
    12f1:	48 83 ec 20          	sub    $0x20,%rsp
    12f5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    12f9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1300:	00 00 
    1302:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1306:	31 c0                	xor    %eax,%eax
    1308:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    130c:	48 8d 15 f5 0c 00 00 	lea    0xcf5(%rip),%rdx        # 2008 <_IO_stdin_used+0x8>
    1313:	48 89 d1             	mov    %rdx,%rcx
    1316:	48 89 c2             	mov    %rax,%rdx
    1319:	48 8d 05 f0 0c 00 00 	lea    0xcf0(%rip),%rax        # 2010 <_IO_stdin_used+0x10>
    1320:	48 89 c6             	mov    %rax,%rsi
    1323:	48 8d 05 ee 0c 00 00 	lea    0xcee(%rip),%rax        # 2018 <_IO_stdin_used+0x18>
    132a:	48 89 c7             	mov    %rax,%rdi
    132d:	b8 00 00 00 00       	mov    $0x0,%eax
    1332:	e8 f9 fd ff ff       	call   1130 <printf@plt>
    1337:	90                   	nop
    1338:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    133c:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1343:	00 00 
    1345:	74 05                	je     134c <error+0x63>
    1347:	e8 d4 fd ff ff       	call   1120 <__stack_chk_fail@plt>
    134c:	c9                   	leave
    134d:	c3                   	ret

000000000000134e <cls>:
    134e:	f3 0f 1e fa          	endbr64
    1352:	55                   	push   %rbp
    1353:	48 89 e5             	mov    %rsp,%rbp
    1356:	48 83 ec 10          	sub    $0x10,%rsp
    135a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1361:	00 00 
    1363:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1367:	31 c0                	xor    %eax,%eax
    1369:	48 8d 05 b5 0c 00 00 	lea    0xcb5(%rip),%rax        # 2025 <_IO_stdin_used+0x25>
    1370:	48 89 c7             	mov    %rax,%rdi
    1373:	b8 00 00 00 00       	mov    $0x0,%eax
    1378:	e8 b3 fd ff ff       	call   1130 <printf@plt>
    137d:	ba 00 00 00 00       	mov    $0x0,%edx
    1382:	be 00 00 00 00       	mov    $0x0,%esi
    1387:	48 8d 05 9c 0c 00 00 	lea    0xc9c(%rip),%rax        # 202a <_IO_stdin_used+0x2a>
    138e:	48 89 c7             	mov    %rax,%rdi
    1391:	b8 00 00 00 00       	mov    $0x0,%eax
    1396:	e8 95 fd ff ff       	call   1130 <printf@plt>
    139b:	90                   	nop
    139c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    13a0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    13a7:	00 00 
    13a9:	74 05                	je     13b0 <cls+0x62>
    13ab:	e8 70 fd ff ff       	call   1120 <__stack_chk_fail@plt>
    13b0:	c9                   	leave
    13b1:	c3                   	ret

00000000000013b2 <open_door>:
    13b2:	f3 0f 1e fa          	endbr64
    13b6:	55                   	push   %rbp
    13b7:	48 89 e5             	mov    %rsp,%rbp
    13ba:	48 83 ec 10          	sub    $0x10,%rsp
    13be:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    13c5:	00 00 
    13c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    13cb:	31 c0                	xor    %eax,%eax
    13cd:	be 00 00 00 00       	mov    $0x0,%esi
    13d2:	48 8d 05 5a 0c 00 00 	lea    0xc5a(%rip),%rax        # 2033 <_IO_stdin_used+0x33>
    13d9:	48 89 c7             	mov    %rax,%rdi
    13dc:	b8 00 00 00 00       	mov    $0x0,%eax
    13e1:	e8 da fd ff ff       	call   11c0 <open@plt>
    13e6:	89 45 f4             	mov    %eax,-0xc(%rbp)
    13e9:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    13ed:	79 19                	jns    1408 <open_door+0x56>
    13ef:	48 8d 05 4a 0c 00 00 	lea    0xc4a(%rip),%rax        # 2040 <_IO_stdin_used+0x40>
    13f6:	48 89 c7             	mov    %rax,%rdi
    13f9:	e8 d2 fd ff ff       	call   11d0 <perror@plt>
    13fe:	bf 01 00 00 00       	mov    $0x1,%edi
    1403:	e8 d8 fd ff ff       	call   11e0 <exit@plt>
    1408:	48 8d 05 71 0c 00 00 	lea    0xc71(%rip),%rax        # 2080 <_IO_stdin_used+0x80>
    140f:	48 89 c7             	mov    %rax,%rdi
    1412:	b8 00 00 00 00       	mov    $0x0,%eax
    1417:	e8 14 fd ff ff       	call   1130 <printf@plt>
    141c:	eb 18                	jmp    1436 <open_door+0x84>
    141e:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
    1422:	0f be c0             	movsbl %al,%eax
    1425:	48 8b 15 e4 2b 00 00 	mov    0x2be4(%rip),%rdx        # 4010 <stdout@GLIBC_2.2.5>
    142c:	48 89 d6             	mov    %rdx,%rsi
    142f:	89 c7                	mov    %eax,%edi
    1431:	e8 2a fd ff ff       	call   1160 <fputc@plt>
    1436:	48 8d 4d f3          	lea    -0xd(%rbp),%rcx
    143a:	8b 45 f4             	mov    -0xc(%rbp),%eax
    143d:	ba 01 00 00 00       	mov    $0x1,%edx
    1442:	48 89 ce             	mov    %rcx,%rsi
    1445:	89 c7                	mov    %eax,%edi
    1447:	e8 24 fd ff ff       	call   1170 <read@plt>
    144c:	48 85 c0             	test   %rax,%rax
    144f:	7f cd                	jg     141e <open_door+0x6c>
    1451:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1454:	89 c7                	mov    %eax,%edi
    1456:	e8 f5 fc ff ff       	call   1150 <close@plt>
    145b:	90                   	nop
    145c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1460:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1467:	00 00 
    1469:	74 05                	je     1470 <open_door+0xbe>
    146b:	e8 b0 fc ff ff       	call   1120 <__stack_chk_fail@plt>
    1470:	c9                   	leave
    1471:	c3                   	ret

0000000000001472 <banner>:
    1472:	f3 0f 1e fa          	endbr64
    1476:	55                   	push   %rbp
    1477:	48 89 e5             	mov    %rsp,%rbp
    147a:	48 83 ec 40          	sub    $0x40,%rsp
    147e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1485:	00 00 
    1487:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    148b:	31 c0                	xor    %eax,%eax
    148d:	48 8d 05 32 0c 00 00 	lea    0xc32(%rip),%rax        # 20c6 <_IO_stdin_used+0xc6>
    1494:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    1498:	48 8d 05 2f 0c 00 00 	lea    0xc2f(%rip),%rax        # 20ce <_IO_stdin_used+0xce>
    149f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    14a3:	48 8d 05 2c 0c 00 00 	lea    0xc2c(%rip),%rax        # 20d6 <_IO_stdin_used+0xd6>
    14aa:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    14ae:	48 8d 05 5b 0b 00 00 	lea    0xb5b(%rip),%rax        # 2010 <_IO_stdin_used+0x10>
    14b5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    14b9:	48 8d 05 48 0b 00 00 	lea    0xb48(%rip),%rax        # 2008 <_IO_stdin_used+0x8>
    14c0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    14c4:	48 8d 05 13 0c 00 00 	lea    0xc13(%rip),%rax        # 20de <_IO_stdin_used+0xde>
    14cb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    14cf:	48 8d 05 10 0c 00 00 	lea    0xc10(%rip),%rax        # 20e6 <_IO_stdin_used+0xe6>
    14d6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    14da:	bf 00 00 00 00       	mov    $0x0,%edi
    14df:	e8 bc fc ff ff       	call   11a0 <time@plt>
    14e4:	89 c7                	mov    %eax,%edi
    14e6:	e8 95 fc ff ff       	call   1180 <srand@plt>
    14eb:	e8 00 fd ff ff       	call   11f0 <rand@plt>
    14f0:	89 c2                	mov    %eax,%edx
    14f2:	48 63 c2             	movslq %edx,%rax
    14f5:	48 69 c0 ab aa aa 2a 	imul   $0x2aaaaaab,%rax,%rax
    14fc:	48 c1 e8 20          	shr    $0x20,%rax
    1500:	89 d6                	mov    %edx,%esi
    1502:	c1 fe 1f             	sar    $0x1f,%esi
    1505:	89 c1                	mov    %eax,%ecx
    1507:	29 f1                	sub    %esi,%ecx
    1509:	89 c8                	mov    %ecx,%eax
    150b:	01 c0                	add    %eax,%eax
    150d:	01 c8                	add    %ecx,%eax
    150f:	01 c0                	add    %eax,%eax
    1511:	29 c2                	sub    %eax,%edx
    1513:	89 d1                	mov    %edx,%ecx
    1515:	48 63 c1             	movslq %ecx,%rax
    1518:	48 8b 44 c5 c0       	mov    -0x40(%rbp,%rax,8),%rax
    151d:	48 89 c6             	mov    %rax,%rsi
    1520:	48 8d 05 c7 0b 00 00 	lea    0xbc7(%rip),%rax        # 20ee <_IO_stdin_used+0xee>
    1527:	48 89 c7             	mov    %rax,%rdi
    152a:	b8 00 00 00 00       	mov    $0x0,%eax
    152f:	e8 fc fb ff ff       	call   1130 <printf@plt>
    1534:	48 8d 05 bd 0b 00 00 	lea    0xbbd(%rip),%rax        # 20f8 <_IO_stdin_used+0xf8>
    153b:	48 89 c7             	mov    %rax,%rdi
    153e:	b8 00 00 00 00       	mov    $0x0,%eax
    1543:	e8 e8 fb ff ff       	call   1130 <printf@plt>
    1548:	90                   	nop
    1549:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    154d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1554:	00 00 
    1556:	74 05                	je     155d <banner+0xeb>
    1558:	e8 c3 fb ff ff       	call   1120 <__stack_chk_fail@plt>
    155d:	c9                   	leave
    155e:	c3                   	ret

000000000000155f <main>:
    155f:	f3 0f 1e fa          	endbr64
    1563:	55                   	push   %rbp
    1564:	48 89 e5             	mov    %rsp,%rbp
    1567:	48 83 ec 20          	sub    $0x20,%rsp
    156b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1572:	00 00 
    1574:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1578:	31 c0                	xor    %eax,%eax
    157a:	48 b8 77 33 74 70 61 	movabs $0x2073736170743377,%rax
    1581:	73 73 20 
    1584:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1588:	48 8d 45 ea          	lea    -0x16(%rbp),%rax
    158c:	ba 07 00 00 00       	mov    $0x7,%edx
    1591:	48 89 c6             	mov    %rax,%rsi
    1594:	bf 00 00 00 00       	mov    $0x0,%edi
    1599:	e8 d2 fb ff ff       	call   1170 <read@plt>
    159e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    15a2:	48 8d 45 ea          	lea    -0x16(%rbp),%rax
    15a6:	48 89 d6             	mov    %rdx,%rsi
    15a9:	48 89 c7             	mov    %rax,%rdi
    15ac:	e8 df fb ff ff       	call   1190 <strcmp@plt>
    15b1:	85 c0                	test   %eax,%eax
    15b3:	75 0c                	jne    15c1 <main+0x62>
    15b5:	b8 00 00 00 00       	mov    $0x0,%eax
    15ba:	e8 f3 fd ff ff       	call   13b2 <open_door>
    15bf:	eb 0f                	jmp    15d0 <main+0x71>
    15c1:	48 8d 05 98 0b 00 00 	lea    0xb98(%rip),%rax        # 2160 <_IO_stdin_used+0x160>
    15c8:	48 89 c7             	mov    %rax,%rdi
    15cb:	e8 19 fd ff ff       	call   12e9 <error>
    15d0:	b8 00 00 00 00       	mov    $0x0,%eax
    15d5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    15d9:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    15e0:	00 00 
    15e2:	74 05                	je     15e9 <main+0x8a>
    15e4:	e8 37 fb ff ff       	call   1120 <__stack_chk_fail@plt>
    15e9:	c9                   	leave
    15ea:	c3                   	ret

00000000000015eb <setup>:
    15eb:	f3 0f 1e fa          	endbr64
    15ef:	55                   	push   %rbp
    15f0:	48 89 e5             	mov    %rsp,%rbp
    15f3:	48 83 ec 10          	sub    $0x10,%rsp
    15f7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    15fe:	00 00 
    1600:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1604:	31 c0                	xor    %eax,%eax
    1606:	b8 00 00 00 00       	mov    $0x0,%eax
    160b:	e8 3e fd ff ff       	call   134e <cls>
    1610:	e8 5d fe ff ff       	call   1472 <banner>
    1615:	48 8b 05 04 2a 00 00 	mov    0x2a04(%rip),%rax        # 4020 <stdin@GLIBC_2.2.5>
    161c:	b9 00 00 00 00       	mov    $0x0,%ecx
    1621:	ba 02 00 00 00       	mov    $0x2,%edx
    1626:	be 00 00 00 00       	mov    $0x0,%esi
    162b:	48 89 c7             	mov    %rax,%rdi
    162e:	e8 7d fb ff ff       	call   11b0 <setvbuf@plt>
    1633:	48 8b 05 d6 29 00 00 	mov    0x29d6(%rip),%rax        # 4010 <stdout@GLIBC_2.2.5>
    163a:	b9 00 00 00 00       	mov    $0x0,%ecx
    163f:	ba 02 00 00 00       	mov    $0x2,%edx
    1644:	be 00 00 00 00       	mov    $0x0,%esi
    1649:	48 89 c7             	mov    %rax,%rdi
    164c:	e8 5f fb ff ff       	call   11b0 <setvbuf@plt>
    1651:	bf 12 13 00 00       	mov    $0x1312,%edi
    1656:	e8 e5 fa ff ff       	call   1140 <alarm@plt>
    165b:	90                   	nop
    165c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1660:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1667:	00 00 
    1669:	74 05                	je     1670 <setup+0x85>
    166b:	e8 b0 fa ff ff       	call   1120 <__stack_chk_fail@plt>
    1670:	c9                   	leave
    1671:	c3                   	ret

Disassembly of section .fini:

0000000000001674 <_fini>:
    1674:	f3 0f 1e fa          	endbr64
    1678:	48 83 ec 08          	sub    $0x8,%rsp
    167c:	48 83 c4 08          	add    $0x8,%rsp
    1680:	c3                   	ret
