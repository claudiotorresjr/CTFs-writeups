from Crypto.Util.number import inverse, long_to_bytes

c = 48511084925420183526614667750002314553245557087216359040164380168157417205838054818182432397825164639931743581979319934170597819562239990100288549990558302029912888160607214
e = 65537
n = 81498020757970999609067174109320139979405492813078153599363977189249525322740350714279156100679701512700773830282784597802936563570271837144481924930802287893627198892230683

#factors from https://www.alpertron.com.ar/ECM.HTM
p = 11253409368472711639
q = 7242073765333192937987290599246681779386797981792995048043356520803151015231969441094657053533568052350089370243758828999753090470979996357725115053890397

phi = (p - 1) * (q - 1)
d = inverse(e, phi)


m = pow(c, d, n)
flag = long_to_bytes(m).decode()
print(flag) #ALQ{RSA_m4is_c0mpl3xo_02}
